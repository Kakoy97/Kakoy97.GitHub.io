---
layout:     post
title:      "忙碌的一个月"
date:       2021-11-18 23:53:00
author:     "Kakoy"
header-img: "img/2021-bg.jpg"
tags:
    - c# 
    - java
---

<p>这是忙碌的一个月~，聊一聊我这段时间的总结
    
    <p>讲讲这段时间工作上的内容</p>
    
    <br>最近公司也在忙碌着国外上线，所以需求也是与日俱增，还有烦人的多语言界面调整等等。
    <br>我在这两周也把游戏中的商城代码进行了重构。
    <br>起初重构代码的原因是策划要求新增一个商城(然而看了代码发现零零散散，需要在各种地方Ctrl+c,Ctrl+v) >_<
    <br>也许是在公司呆了一年，受到瑞哥的熏陶，也许是自己成长了，又或者是之前的设计模式书籍让我有所感悟,又或者是想偷懒，不想每次都写这么多代码。
    <br>于是把商城重构了一波(结果重构需要写的代码，比我新增一个商城还要多啊。阿西吧)。
    <br>好在有之前学习的设计模式，还有瑞哥指导的加持下，商城重构的雏形基本出来了。(瑞哥想要自动化,但是对于我这个菜鸟程序员来说，还有点困难)。
    <br>也是因为有这次机会，让自己对面向对象和一些设计模式有了深入了解。
    <br>

    <p>讨论</p>
    
    <ul>
        <li><b>组合模式为什么根节点不能有继承？</b>
        </li>
    </ul>这是我和瑞哥讨论时产生的疑问。因为瑞哥认为商城如果采用组合模式来进行设计的话，有几点好处:1.可以动态去组合,2.为后面自动化铺路。
    <br>我之前没有学过组合，但是看瑞哥画出来的类图，我觉得很像我现在设计的。不过他把功能细分开来了，而且明确的说，在最终组合的那个类里，不能有继承。
    <br>我很疑惑，因为我觉得我现在就是组合模式，我把数据层,商品陈列,商店拆分开来了，并没有耦合，可以任意组合。但是我在最终组合的地方有多个派生类。
    <br><b>于是乎我们激烈的讨论了30分钟</b>
    <br>后来我也了解了为什么。如果你最后组合的类里还需要派生出子类，是不是能说明这个类与其他派生类的区别还可以细分成别的模块。直至最后只有一套模板。
    <br>
    <br>

    <p>忽视的bug</p>

    <ul>
        <li><b>为什么我数据层的表数据突然会消失</b>
        </li>
    </ul>有一个Data类，负责存放数据，对数据进行操作。
    <br>但是我发现，在我购买了商品以后，再去这个Data类里寻找，会少了我之前用的几条商品数据。
    <br>看了一下Data类里没有对这个表进行任何操作，只有在登入时初始化一次。这让我百思不得其解。
    <br>后面也是瑞哥破解了，原来我这张表用到的那几条商品数据，被我无意间(深拷贝)到另一张表中，跨越了两个类，然后改变了id，导致Data类的表也被影响到了。
    <br><b>我觉得lua的好处在于，只要有这个实体我可以获取它的所有东西。但不好的也是在这，我可以跨越无数个类去把它的东西进行改变(没有访问级别)。<br></b>
    <br><b>实参与形参</b>
    <br>自从开始写lua，把java的很多知识给遗忘了。看来要在学习的过程中也要把旧的知识捡起来，巩固一下。
    <br>形参是出现在函数定义中,在函数体内都可以使用，但是离开了函数外就失效了。
    <br>实参则是在主调函数中，说白了就是真正传入函数的参数。
    <br><b>当形参和实参不是指针类型时，在该函数运行时，形参和实参是不同的变量，他们在内存中位于不同的位置，形参将实参的内容复制一份，在该

        函数运行结束的时候形参被释放，而实参内容不会改变。

        而如果函数的参数是指针类型变量,在调用该函数的过程中，传给函数的是实参的地址，在函数体内部使用的也是实参的地址，即使用的就是实参

        本身。所以在函数体内部可以改变实参的值。</b>
   
</p>
